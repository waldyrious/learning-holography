<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" lang="en">
<head>
	<title>PH CGH formulas | Learning Holography</title>
	<meta charset="utf-8" />
	<link rel="stylesheet" href="css/base-style.css" />
	<script type="text/x-mathjax-config">
		MathJax.Hub.Config({ tex2jax: { inlineMath: [['$','$']] } });
	</script>
	<script async="async" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML"></script>
</head>
<body>
	<a href="index.xhtml">← back</a>

	<p class="note">
		This page is not ready for consumption.
		At the moment it's just a bunch of assorted notes.
	</p>

	<p>
	For any given object particle, $o$, the value of the wave it emits,
	measured at the moment in time and location in space
	corresponding to the hologram pixel, $h$,
	is given by the following expression:
	</p>

	\begin{equation}
	A*\cos( \text{phase}( o, h ) )
	\end{equation}

	where

	\begin{equation}
	\text{phase}(o, h)  =  \omega_t \Delta_t(o, h) - \omega_s \Delta_s(o, h)
	\end{equation}

	(Legend:
	$o$ = object,
	$h$ = hologram,
	$s$ = space,
	$t$ = time,
	$\omega$ = angular frequency)

	<p>More specifically:</p>
	<table>
		<tr>
			<td colspan="2">we start counting time
			when the wavefront left the illumination/reference source</td>
			<td colspan="2">we start measuring space
			at the origin of the coordinate system,
			usually the center of the hologram.</td>
		</tr>
		<tr>
			<th>$t_\text{o}$, $t_h$</th>
			<td>moments when the wavefront hits
			the current object particle and the hologram pixel,
			respectively</td>
			<th>$s_\text{o}$, $s_h$</th>
			<td>locations of the object particle and of the hologram pixel,
			respectively</td>
		</tr>
		<tr>
			<th>$\omega_t$</th>
			<td>temporal angular frequency,
			i.e. how many cycles, measured in radians,
			the wave completes per unit of time.</td>
			<th>$\omega_s$</th>
			<td>spatial angular frequency,
			i.e. how many cycles, measured in radians,
			the wave completes per unit of space.</td>
		</tr>
		<tr>
			<th>$\Delta_t(o, h)$<br />$= \|t_h - t_\text{o}\|$</th>
			<td>duration of the propagation
			from the object particle to the hologram pixel</td>
			<th>$\Delta_s(o, h)$<br />$= \|s_h - s_\text{o}\|$</th>
			<td>distance from the object particle to the hologram pixel</td>
		</tr>
		<tr>
			<th>$\omega_t \Delta_t$</th>
			<td>number of cycles, measured in radians,
			completed by the wave in this interval of time</td>
			<th>$\omega_s \Delta_s$</th>
			<td>number of cycles, measured in radians,
			completed by the wave in this interval of space</td>
		</tr>
	</table>

	We plug $\text{phase}( obj, holo )$ into the cosine,
	and multiply it by the real amplitude of the wave
	(since cosine varies between -1 and 1),
	and lo and behold, we get the equation
	for calculating the value of a single particle wave,
	measured at a specific location (hologram pixel) and at a given moment.
	Then we just need to sum up all the particle-pixel pairs
	to get the whole object wave value for this space-time pair:

	$obj( holo ) = sum_{obj}( A*\cos( \text{phase}( obj, holo ) ) )$

	<h3>Hologram</h3>

	<p>abstract $\omega t/T - k r_n(h)$ and $\omega t - k p_ʀ(h)$ as $\varphi$
	and formulate phase sweep as integral
	which yields a simple result based on the phase differences.</p>

	<p>cumulative calculation only needs the <u>initial phases</u>
	of each object point, because it works with their differences (relative values),
	not their absolute values.

	So, although the absolute values do cycle over time
	(which is what, theoretically, the cumulative calculation is doing:
	summing contributions at different moments,
	therefore at different absolute phase values),
	the fact that they cycle (precisely) <u>in phase</u> with each other,
	means that their differences will be constant over time.</p>

	<h3>Complex formulation</h3>

	<p>
	As previously defined, let $s_h = (h_x; h_y; 0)$ be a pixel on the hologram plane ($z = 0$),
	and $s_{on} = (o_{nx}; o_{ny}; o_{nz})$ be the location of the $n^{th}$ object particle light source.
	Then the object wavefront at h for all object point light sources is given by:
	</p>

	\begin{equation}
	obj(s_h) = \sum_n A_n \exp{(i \cdot \omega_s \Delta_s)}
	\end{equation}

	<p>where $A_n$ is the amplitude of the light source.</p>

	<p>Also let $A_{ref}$ be the amplitude of the planar reference wavefront,
	whose direction is given by the normalized vector
	$\mathbf{ref} = (ref_x, ref_y, ref_z), |\mathbf{ref}| = 1$.
	Then the reference wavefront at $h$ is given by:</p>

	\begin{equation}
	ref(h) = A_{ref} \exp \left[ i k (\mathbf{ref} \cdot h) \right] = A_{ref} \exp \left[ i k (ref_x h_x  + ref_y h_y ) \right]
	\end{equation}

	since $h_z = 0$. By modulating the object wavefront with the planar reference wavefront,
	the resulting field at each point $h$ of the hologram plane is given by:

	\[
	E(h) = obj(h) + ref(h)
	\]

	The respective intensity pattern is given by the magnitude squared

	\[
	I(h) = |E(h)|^2 = E(h) * E(h)^*
	\]
	The bipolar intensity method can be derived by expanding the magnitude squared above
	\begin{equation}
	I(h) = |E(h)|^2 = |obj(h)|^2 + |ref(h)|^2 + 2 Real[obj(h) * ref^*(h)]
	\end{equation}
	The $|obj(h)|^2$ term represents object point light sources interfering with each other
	and can be neglected in computer generated holography.
	The $|ref(h)|^2$ term is the reference bias that increases the hologram intensity
	and can also not be included.
	Finally, the last term contains all the required information
	to fully reconstruct the desired image.
	In the bipolar intensity formulation the interference pattern
	across points $h$ of the hologram plane is thus described by:

	\[ \begin{array}{lcl}
	I(h) &amp; \propto &amp;  Real[obj(h) * ref^*(h)]\\
	 &amp; \propto &amp; Real [ A_{ref} \exp[-i k (ref_x h_x + ref_y h_y)] \sum_n A_n \exp{(i k r_n(h))} ]\\
	 &amp; \propto &amp; Real [ A_{ref} \sum_n A_n \exp{[i k ( r_n(h) - (ref_x h_x + ref_y h_y) )]} ]
	\end{array} \]

	which finally leads to:

	\begin{equation}
	I(h) \propto A_{ref} \sum_n A_n \cos{[k ( r_n(h) -(ref_x h_x + ref_y h_y) )]}
	\label{eq:bipolar}
	\end{equation}

	<pre>
	var holoPixels = 500
	var waveSources = [
		  (reference wave),
		  (object point 1),
		  ...,
		  (object point n) ]
	var intensity[], hologram[]

	for px = 0 --> holoPixels {
	  for each src1 in waveSources, {
		for each src2 in (objectPoints,) {
		  intensity[ px ] += wave-amplitude-difference( px, src1, src2 )
		}
	  }
	}

	# Normalize
	var maxIntensity = max( intensity[] )
	for px = 0 --> holoPixels {
	  hologram[ px ] = intensity[ px ] / maxIntensity
	}
	</pre>

</body>
</html>
